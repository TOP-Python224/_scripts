====== Удалённый репозиторий ======

main.py
funcs.py    # шаг 5.1: файл обновлён, коммиты записаны




# шаг 1: clone — создание ЛР в локальной файловой системе и копирование файлов из УР

         ИЛИ: fetch — сравнение версий файлов в ЛР с версиями файлов в УР
           
              pull — получение более новых версий файлов и информации об изменениях из УР

===== Локальный репозиторий 1 =====

main.py
funcs.py    # шаг 2: внесение изменений в код
            
            # шаг 3: commit — фиксация и подтверждение изменений
            
            # шаг 4: fetch

            # шаг 5: push — отправка изменённого файла и коммита в удалённый репозиторий




# шаг 1.5: клонирование УР в другую локальную файловую систему

           ИЛИ: fetch — сравнение версий файлов в ЛР с версиями файлов в УР
           
                pull — получение более новых версий файлов и информации об изменениях из УР

===== Локальный репозиторий 2 =====

main.py
funcs.py    # шаг 2.5: внесение изменений в код
            
            # шаг 3.5: commit — фиксация и подтверждение изменений
            
            # шаг 4.5: fetch
            
            при возникновении конфликта изменений:
            
                # шаг 5.5: pull последних версии файла и коммита с УР в ЛР
                
                при отсутствии пересечений между различными изменениями 
                
                    # шаг 6.5: auto merge — автоматическое объединение изменений
                    
                    # шаг 7.5: commit слияния
                    
                    # шаг 8.5: push файла с разрешённым конфликтом изменений и коммита в УР

                при наличии пересечений между различными изменениями 
                
                    # шаг 6.5: manual merge — ручное объединение/исправление изменений 

                    # шаг 7.5: commit слияния
                    
                    # шаг 8.5: push файла с разрешённым конфликтом изменений и коммита в УР
